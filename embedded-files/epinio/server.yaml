---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: epinio-server
  namespace: epinio

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: epinio-server
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
  - get
  - delete
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: epinio-server-cluster-role
  namespace: epinio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: epinio-server
subjects:
- kind: ServiceAccount
  name: epinio-server
  namespace: epinio

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: epinio
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: epinio-server
    app.kubernetes.io/part-of: epinio
    app.kubernetes.io/version: ##current_epinio_version##
  name: epinio-server
  namespace: epinio
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: epinio-server
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: epinio-server
      app.kubernetes.io/part-of: epinio
  template:
    metadata:
      labels:
        app.kubernetes.io/component: epinio-server
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: epinio-server
        app.kubernetes.io/part-of: epinio
        app.kubernetes.io/version: ##current_epinio_version##
      name: epinio-server
    spec:
      serviceAccountName: epinio-server
      containers:
        - command: ["/epinio", "server"]
          args: ["--port", "80"]
          image: splatform/epinio-server:##current_epinio_version##
          livenessProbe:
            httpGet:
              path: /
              port: 80
          name: epinio-server
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 65532

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: epinio
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: epinio-server
    app.kubernetes.io/part-of: epinio
    app.kubernetes.io/version: ##current_epinio_version##
  name: epinio-server
  namespace: epinio
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/name: epinio-server
